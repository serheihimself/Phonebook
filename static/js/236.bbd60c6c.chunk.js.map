{"version":3,"file":"static/js/236.bbd60c6c.chunk.js","mappings":"yOAiFA,EA5E4B,WAC1B,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAYO,GACrB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAwBD,OACE,kBAAMC,SAvBa,SAAAC,GAGnB,GAFAA,EAAEC,iBAEW,KAATX,GAA4B,KAAbI,GAA6B,KAAVF,EAAtC,CAIA,IAAMU,EAAOF,EAAEG,cAEfhB,GACEiB,EAAAA,EAAAA,IAAS,CACPd,KAAMY,EAAKG,SAASf,KAAKQ,MACzBN,MAAOU,EAAKG,SAASb,MAAMM,MAC3BJ,SAAUQ,EAAKG,SAASX,SAASI,SAGrCP,EAAY,IACZE,EAAS,IACTE,EAAY,IACZO,EAAKI,OAbJ,CAcF,EAG+BC,aAAa,MAA3C,WACE,yCAEE,kBACEC,KAAK,OACLlB,KAAK,OACLmB,SAAUb,EACVc,YAAY,wBAGhB,sCAEE,kBACEF,KAAK,QACLlB,KAAK,QACLmB,SAAUb,EACVc,YAAY,uBAGhB,yCAEE,kBACEF,KAAK,WACLlB,KAAK,WACLmB,SAAUb,EACVe,QAAQ,iBACRD,YAAY,qCAGhB,mBAAQF,KAAK,SAAb,4BAGL,EC7Ec,SAASI,IACtB,OACE,4BACE,6CACA,SAAC,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setUserName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setUserName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || password === '' || email === '') {\n      <p>Please fill in all fields!</p>;\n      return;\n    }\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    setUserName('');\n    setEmail('');\n    setPassword('');\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Username\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          placeholder=\"Enter your name\"\n        />\n      </label>\n      <label>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          placeholder=\"email@mail.com\"\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n          pattern=\"(?=.*\\d).{7,}\"\n          placeholder=\"7 characters or more, please\"\n        />\n      </label>\n      <button type=\"submit\">Registration</button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["dispatch","useDispatch","useState","name","setUserName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","form","currentTarget","register","elements","reset","autoComplete","type","onChange","placeholder","pattern","Register"],"sourceRoot":""}